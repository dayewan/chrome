function getCurrentTabId(callback) {
    chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {
        if (callback) callback(tabs.length ? tabs[0].id : null);
    });
}

function setRed(tabId) {
    chrome.tabs.executeScript(tabId, { file: 'js/getProductInfo.js' });
}

class App extends React.Component {
    constructor(props) {
        super(props);
        const propsData = props.all;
        let imageList = propsData.banner.map(function (item, index) {
            return { check: true, src: item, name: index + 1 };
        });
        this.state = {
            imageList: imageList,
            title: propsData.title,
            checkAll: true
        };
        console.log(props);
        this.handleCheckAll = this.handleCheckAll.bind(this);
        this.download = this.download.bind(this);
    }

    handleCheckAll(e) {
        const imageList = this.state.imageList;
        const checked = e.target.checked;
        imageList.map(function (item) {
            item.check = e.target.checked;
            return item;
        });
        this.setState({ imageList: imageList, checkAll: checked });
    }

    download() {
        const imageList = this.state.imageList;
        const linkArr = imageList.map(function (item) {
            return item.src;
        });
        Promise.all(linkArr.map(url => fetch(url).then(resp => resp.blob()))).then(blobs => {
            let zip = new JSZip();
            for (let item in blobs) {
                console.log(blobs[item]);
                zip.file(String(parseInt(item) + 1) + '.jpg', blobs[item], { base64: true });
            }
            zip.generateAsync({ type: "blob" }).then(function (content) {
                saveAs(content, "lll.zip");
            });
        });
    }

    handleCheckChange(index, e) {
        const imageList = this.state.imageList;
        const checked = e.target.checked;
        imageList.map(function (item, selfIndex) {
            if (index === selfIndex) {
                item.check = checked;
            }
            return item;
        });
        const checkAll = imageList.every(function (item) {
            return item.check;
        });
        this.setState({ imageList: imageList, checkAll: checkAll });
    }

    render() {
        const num = this.state.imageList;
        const list = num.map((item, index) => React.createElement(
            'div',
            { className: 'col-6', key: item.name },
            React.createElement(
                'div',
                { className: 'form-check' },
                React.createElement(
                    'label',
                    { className: 'form-check-label' },
                    React.createElement('input', { type: 'checkbox', className: 'form-check-input', checked: item.check,
                        onChange: this.handleCheckChange.bind(this, index) }),
                    React.createElement('img', { src: item.src, alt: '', width: '100%' })
                )
            )
        ));
        return React.createElement(
            'div',
            { className: 'App mt-4' },
            React.createElement(
                'div',
                { className: 'container' },
                React.createElement(
                    'div',
                    { className: 'form-group row' },
                    React.createElement(
                        'label',
                        { htmlFor: 'title', className: 'col-3 col-form-label text-left' },
                        '\u6807\u9898'
                    ),
                    React.createElement(
                        'div',
                        { className: 'col-9' },
                        React.createElement('input', { value: this.state.title, type: 'text', id: 'title', className: 'form-control' })
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'form-group row' },
                    React.createElement(
                        'label',
                        { htmlFor: 'price', className: 'col-3 col-form-label text-left' },
                        '\u4EF7\u683C'
                    ),
                    React.createElement(
                        'div',
                        { className: 'col-9' },
                        React.createElement('input', { type: 'text', id: 'price', className: 'form-control' })
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'form-group row' },
                    React.createElement(
                        'label',
                        { htmlFor: 'Freight', className: 'col-3 col-form-label text-left' },
                        '\u8FD0\u8D39'
                    ),
                    React.createElement(
                        'div',
                        { className: 'col-9' },
                        React.createElement('input', { type: 'text', id: 'Freight', className: 'form-control' })
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'form-group row' },
                    React.createElement(
                        'label',
                        { htmlFor: 'Item', className: 'col-3 col-form-label text-left' },
                        '\u8D27\u53F7'
                    ),
                    React.createElement(
                        'div',
                        { className: 'col-9' },
                        React.createElement('input', { type: 'text', id: 'Item', className: 'form-control' })
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'form-group row' },
                    React.createElement(
                        'label',
                        { htmlFor: 'link', className: 'col-3 col-form-label text-left' },
                        '\u91C7\u8D2D\u94FE\u63A5'
                    ),
                    React.createElement(
                        'div',
                        { className: 'col-9' },
                        React.createElement('input', { type: 'text', id: 'link', className: 'form-control' })
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'form-group row' },
                    React.createElement(
                        'label',
                        { htmlFor: 'similar-link', className: 'col-3 col-form-label text-left' },
                        '\u4E0B\u56FE\u94FE\u63A5'
                    ),
                    React.createElement(
                        'div',
                        { className: 'col-9' },
                        React.createElement('input', { type: 'text', id: 'similar-link', className: 'form-control' })
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'form-group row' },
                    React.createElement(
                        'label',
                        { htmlFor: 'props', className: 'col-3 col-form-label text-left' },
                        '\u5C5E\u6027'
                    ),
                    React.createElement(
                        'div',
                        { className: 'col-9' },
                        React.createElement('textarea', { id: 'props', className: 'form-control' })
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'form-check clearfix' },
                    React.createElement(
                        'label',
                        { className: 'form-check-label float-left' },
                        React.createElement('input', { type: 'checkbox', className: 'form-check-input', checked: this.state.checkAll,
                            onChange: this.handleCheckAll }),
                        '\u8F6E\u64AD\u56FE\u7247'
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'row' },
                    list
                ),
                React.createElement(
                    'div',
                    { className: 'form-check clearfix' },
                    React.createElement(
                        'label',
                        { className: 'form-check-label float-left' },
                        React.createElement('input', { type: 'checkbox', className: 'form-check-input', checked: this.state.checkAll,
                            onChange: this.handleCheckAll }),
                        '\u8BE6\u60C5\u56FE\u7247'
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'row' },
                    list
                ),
                React.createElement(
                    'div',
                    { className: 'row pt-3' },
                    React.createElement(
                        'div',
                        { className: 'col-4 text-left pl-2 ml-4' },
                        React.createElement(
                            'button',
                            { className: 'btn btn-success btn-sm', onClick: this.download },
                            '\u4E0B\u8F7D\u56FE\u7247'
                        )
                    ),
                    React.createElement(
                        'div',
                        { className: 'col-4' },
                        React.createElement(
                            'button',
                            { className: 'btn btn-success btn-sm' },
                            '\u4E0B\u8F7D\u5E76\u4FDD\u5B58'
                        )
                    )
                )
            )
        );
    }
}

chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {
    let allParam = request;
    ReactDOM.render(React.createElement(App, { all: allParam }), document.getElementById('app'));
});

getCurrentTabId(setRed);
